// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
)

// #include <stdlib.h>
// #include <adwaita.h>
import "C"

// ApplicationWindowClass: instance of this type is always passed by reference.
type ApplicationWindowClass struct {
	*applicationWindowClass
}

// applicationWindowClass is the struct that's finalized.
type applicationWindowClass struct {
	native *C.AdwApplicationWindowClass
}

func (a *ApplicationWindowClass) ParentClass() *gtk.ApplicationWindowClass {
	valptr := &a.native.parent_class
	var _v *gtk.ApplicationWindowClass // out
	_v = (*gtk.ApplicationWindowClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
