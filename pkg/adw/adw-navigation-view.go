// Code generated by girgen. DO NOT EDIT.

package adw

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/gtk/v4"
)

// #include <stdlib.h>
// #include <adwaita.h>
import "C"

// NavigationPageClass: instance of this type is always passed by reference.
type NavigationPageClass struct {
	*navigationPageClass
}

// navigationPageClass is the struct that's finalized.
type navigationPageClass struct {
	native *C.AdwNavigationPageClass
}

func (n *NavigationPageClass) ParentClass() *gtk.WidgetClass {
	valptr := &n.native.parent_class
	var _v *gtk.WidgetClass // out
	_v = (*gtk.WidgetClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}

// NavigationViewClass: instance of this type is always passed by reference.
type NavigationViewClass struct {
	*navigationViewClass
}

// navigationViewClass is the struct that's finalized.
type navigationViewClass struct {
	native *C.AdwNavigationViewClass
}

func (n *NavigationViewClass) ParentClass() *gtk.WidgetClass {
	valptr := &n.native.parent_class
	var _v *gtk.WidgetClass // out
	_v = (*gtk.WidgetClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
